plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

ext {
    junitVersion = '5.9.2'
    lombokVersion = '1.18.30'
    modelmaper = '3.2.0'
    openapi = '2.3.0'
}

checkstyle {
    toolVersion '7.8.1'
    configFile file("checkstyle.xml")
}

group = 'mvp-project'
version = '1.0.2'

tasks.withType(Checkstyle) {
    ignoreFailures true
    exclude '**/**'
}

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapi}"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.modelmapper:modelmapper:${modelmaper}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.11'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.19.3'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.3'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    runtimeOnly "org.postgresql:postgresql"
}

test {
    useJUnitPlatform()
}
test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "mvpproject/crmbaseservice/config/**",
            ])
        }))
    }
}

